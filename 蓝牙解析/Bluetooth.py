# coding = utf-8import pygattimport loggingimport binasciiimport time# Many devices, e.g. Fitbit, use random addressing - this is required to connect.ADDRESS_TYPE = pygatt.BLEAddressType.randomDEVICE_ADDRESS = "E6:DC:5B:F9:C5:F3"def indication_callBack(handle,value):    print("indication,handle %d:%s" %(handle,value))def pytest(address=DEVICE_ADDRESS,type=pygatt.BLEAddressType.public):    try:        adapter = pygatt.BGAPIBackend()        adapter.start()        print("===== adapter.scan() =====")        devices = adapter.scan()        for dev in devices:            print("address : %s,name : %s " %(dev['address'],dev['name']))        print("===== adapter.connect() =====")        devices = adapter.connect(address,address_type=type)        print("address: " + str(devices._address))        print("handle :" + str(devices._handle))        print("rssi :" + str(devices.get_rssi()))        print("====== device.discover_characteristics() =====")        for uuid in devices.discover_characteristics().keys():            try:                print("Read UUID %s (handle %d): %s" %(uuid,devices.get_handle(uuid),binascii.hexlify(devices.char_read(uuid))))            except:                print("Read UUID %s (handle %d): %s" %                      (uuid,devices.get_handle(uuid),"!deny!"))        while (True):            time.sleep(0.1)    finally:        adapter.stop()if __name__ == "__main__":    pytest()